// Generated by view binder compiler. Do not edit!
package com.example.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.test.R;
import com.google.android.material.divider.MaterialDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainRecyclerCellBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialDivider divider;

  @NonNull
  public final TextView drinkInstruction;

  @NonNull
  public final TextView drinkName;

  @NonNull
  public final TextView drinkState;

  @NonNull
  public final ImageView image;

  private MainRecyclerCellBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialDivider divider, @NonNull TextView drinkInstruction,
      @NonNull TextView drinkName, @NonNull TextView drinkState, @NonNull ImageView image) {
    this.rootView = rootView;
    this.divider = divider;
    this.drinkInstruction = drinkInstruction;
    this.drinkName = drinkName;
    this.drinkState = drinkState;
    this.image = image;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainRecyclerCellBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainRecyclerCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_recycler_cell, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainRecyclerCellBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      MaterialDivider divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.drink_instruction;
      TextView drinkInstruction = ViewBindings.findChildViewById(rootView, id);
      if (drinkInstruction == null) {
        break missingId;
      }

      id = R.id.drink_name;
      TextView drinkName = ViewBindings.findChildViewById(rootView, id);
      if (drinkName == null) {
        break missingId;
      }

      id = R.id.drink_state;
      TextView drinkState = ViewBindings.findChildViewById(rootView, id);
      if (drinkState == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      return new MainRecyclerCellBinding((ConstraintLayout) rootView, divider, drinkInstruction,
          drinkName, drinkState, image);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
